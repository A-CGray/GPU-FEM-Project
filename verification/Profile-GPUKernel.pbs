#!/usr/bin/env zsh
#PBS -N Profile-GPUKernel
#PBS -q devel@pbspl4
#PBS -l select=1:model=sky_gpu:ncpus=1:ngpus=1:mem=32GB
#PBS -l place=free:shared
#PBS -l walltime=1:00:00
#PBS -o Profile-GPUKernel_pbs.log
#PBS -j oe
#PBS -r n
#PBS -W group_list=a1607
#PBS -m ba

projectDir=/nobackup/achris10/GPU-FEM-Project
meshDir=$projectDir/meshes

outputDir=$projectDir/QuadPtParallel
mkdir -p $outputDir

make clean
make &> $outputDir/Profile-GPUKernel.out

for meshFile in $meshDir/*.bdf; do
    echo Running with mesh file: $meshFile &>> $outputDir/Profile-GPUKernel.out
    ./TestKernels.exe $meshFile &>> $outputDir/Profile-GPUKernel.out

    if [[ $? != 0 ]]; then
        echo "Opening ${meshFile} failed"
    else

        baseMeshName=$(basename ${meshFile})
        baseMeshName=${baseMeshName%.*}

        # Move results to nobackup
        for file in JacobianTimings.csv ResidualTimings.csv TACSResidual.csv TACSJacobian.mtx KernelResidual.csv KernelJacobian.mtx; do
            mv $file $outputDir/$baseMeshName-$file
        done
    fi
done

# --- Run NSight compute profiler on the 4 different 1MDOF square meshes ---
## declare an array variable
declare -a profileFiles=("Square-Order1-495296Elements-993026DOF" "Square-Order2-122798Elements-984818DOF" "Square-Order3-58713Elements-1059332DOF" "Square-Order4-30652Elements-983298DOF")

for f in "${profileFiles[@]}"
do
   meshFile=$meshDir/$f.bdf
   ncu -f --set full -o $outputDir/$f ./TestKernels.exe $meshFile &>> $outputDir/Profile-GPUKernel.out
done
